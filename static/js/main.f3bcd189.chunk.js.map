{"version":3,"sources":["components/Navbar.js","components/Menu.js","components/data.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","useState","collapsed","setCollapsed","Navbar","color","light","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Menu","dish","dishes","selectedDish","setSelectedDish","menu","map","key","id","Card","onDishSelect","CardImg","width","src","image","alt","CardImgOverlay","style","fontSize","name","CardBody","CardText","description","price","DISHES","category","label","comments","rating","comment","author","date","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3bcd189.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\n\r\nconst NavBar = (props) => {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const toggleNavbar = () => setCollapsed(!collapsed);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"faded\" light>\r\n        <NavbarBrand href=\"/\" className=\"mr-auto\">\r\n          Restaurant\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\r\n        <Collapse isOpen={!collapsed} navbar>\r\n          <Nav navbar>\r\n            <NavItem>\r\n              <NavLink href=\"#\">Components</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"#\">GitHub</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport { Card, CardImg, CardImgOverlay, CardBody, CardText } from \"reactstrap\";\r\nconst Menu = ({ dishes }) => {\r\n  const [selectedDish, setSelectedDish] = useState(null);\r\n\r\n  const onDishSelect = (dish) => {\r\n    setSelectedDish(dish);\r\n  };\r\n\r\n  const renderSelectedDish = (dish) => {\r\n    if (selectedDish != null) {\r\n      return (\r\n        <Card>\r\n          <CardImg width=\"100%\" src={dish.image} alt=\"Selected dish image\" />\r\n          <CardBody>\r\n            <CardText>{dish.description}</CardText>\r\n            <CardText>${dish.price}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const menu = dishes.map((dish) => {\r\n    return (\r\n      <div className=\"col-12 col-md-3 mt-2\" key={dish.id}>\r\n        <Card onClick={() => onDishSelect(dish)}>\r\n          <CardImg width=\"100%\" src={dish.image} alt=\"Dish image\" />\r\n          <CardImgOverlay style={{ fontSize: \"1.5em\" }}>\r\n            {dish.name}\r\n          </CardImgOverlay>\r\n        </Card>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-2\">{menu}</div>\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-12 col-md-5 m-auto\">\r\n          {renderSelectedDish(selectedDish)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","export const DISHES = [\r\n  {\r\n    id: 0,\r\n    name: \"Uthappizza\",\r\n    image: \"assets/images/uthappizza.png\",\r\n    category: \"mains\",\r\n    label: \"Hot\",\r\n    price: \"4.99\",\r\n    description:\r\n      \"A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.\",\r\n    comments: [\r\n      {\r\n        id: 0,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"John Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 1,\r\n        rating: 4,\r\n        comment:\r\n          \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul McVites\",\r\n        date: \"2014-09-05T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 2,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 3,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 4,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Zucchipakoda\",\r\n    image: \"assets/images/zucchipakoda.png\",\r\n    category: \"appetizer\",\r\n    label: \"\",\r\n    price: \"1.99\",\r\n    description:\r\n      \"Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce\",\r\n    comments: [\r\n      {\r\n        id: 0,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"Johny Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 1,\r\n        rating: 4,\r\n        comment:\r\n          \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul\",\r\n        date: \"2014-09-05T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 2,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 3,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 4,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Vadonut\",\r\n    image: \"assets/images/vadonut.png\",\r\n    category: \"appetizer\",\r\n    label: \"New\",\r\n    price: \"1.99\",\r\n    description:\r\n      \"A quintessential ConFusion experience, is it a vada or is it a donut?\",\r\n    comments: [\r\n      {\r\n        id: 0,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"John Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 1,\r\n        rating: 4,\r\n        comment:\r\n          \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul McVites\",\r\n        date: \"2014-09-05T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 2,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 3,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 4,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"ElaiCheese Cake\",\r\n    image: \"assets/images/elaicheesecake.png\",\r\n    category: \"dessert\",\r\n    label: \"\",\r\n    price: \"2.99\",\r\n    description:\r\n      \"A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms\",\r\n    comments: [\r\n      {\r\n        id: 0,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"John Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 1,\r\n        rating: 4,\r\n        comment:\r\n          \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul McVites\",\r\n        date: \"2014-09-05T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 2,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 3,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 4,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/Navbar\";\nimport Menu from \"./components/Menu\";\n// import Menu from \"./components/Menu_Media\";\n// import { Menu } from \"./components/Menu_test\";\n\nimport { DISHES } from \"./components/data\";\n\nfunction App() {\n  const dishes = DISHES;\n  return (\n    <div>\n      <NavBar />\n      <Menu dishes={dishes} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}